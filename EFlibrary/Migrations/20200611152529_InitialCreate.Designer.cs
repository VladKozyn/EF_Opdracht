// <auto-generated />
using System;
using EFlibrary;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFlibrary.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200611152529_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFlibrary.Speler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rugnummer")
                        .HasColumnType("int");

                    b.Property<int>("TeamStamnummer")
                        .HasColumnType("int");

                    b.Property<int>("Waarde")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamStamnummer");

                    b.ToTable("Spelers");
                });

            modelBuilder.Entity("EFlibrary.Team", b =>
                {
                    b.Property<int>("StamNummer")
                        .HasColumnType("int");

                    b.Property<string>("Bijnaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trainer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StamNummer");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("EFlibrary.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NieuwTeamId")
                        .HasColumnType("int");

                    b.Property<int>("SpelerId")
                        .HasColumnType("int");

                    b.Property<int>("SpelerWaarde")
                        .HasColumnType("int");

                    b.Property<int?>("oudTeamStamNummer")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NieuwTeamId");

                    b.HasIndex("SpelerId");

                    b.HasIndex("oudTeamStamNummer");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("EFlibrary.Speler", b =>
                {
                    b.HasOne("EFlibrary.Team", "Team")
                        .WithMany("Spelers")
                        .HasForeignKey("TeamStamnummer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFlibrary.Transfer", b =>
                {
                    b.HasOne("EFlibrary.Team", "nieuwTeam")
                        .WithMany()
                        .HasForeignKey("NieuwTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFlibrary.Speler", "Speler")
                        .WithMany()
                        .HasForeignKey("SpelerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFlibrary.Team", "oudTeam")
                        .WithMany()
                        .HasForeignKey("oudTeamStamNummer");
                });
#pragma warning restore 612, 618
        }
    }
}
